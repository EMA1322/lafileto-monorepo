name: CI

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true    

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Instala pnpm y lo agrega al PATH del runner
      - uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Verify pnpm
        run: |
          which pnpm
          pnpm -v

      # Cache del store de pnpm para acelerar installs
      - name: Resolve pnpm store path
        id: pnpm-cache
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install deps (runs prisma generate via postinstall)
        run: pnpm install --frozen-lockfile

      - name: Run lint (all workspaces)
        run: pnpm -r lint

  test:
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Verify pnpm
        run: |
          which pnpm
          pnpm -v

      - name: Resolve pnpm store path
        id: pnpm-cache
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install deps (runs prisma generate via postinstall)
        run: pnpm install --frozen-lockfile

      - name: Run tests (all workspaces)
        run: pnpm -r test

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Verify pnpm
        run: |
          which pnpm
          pnpm -v

      - name: Resolve pnpm store path
        id: pnpm-cache
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install deps (runs prisma generate via postinstall)
        run: pnpm install --frozen-lockfile

      - name: Build backend
        run: pnpm -F backend build

      - name: Build client
        run: pnpm -F client build

      - name: Build admin
        run: pnpm -F admin build
